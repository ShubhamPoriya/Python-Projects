import pygameimport pygame
import os
import time
import random
pygame.font.init()  # Initialize font object which is used in the game

# Display
WIDTH, HEIGHT = 500, 500
WIN = pygame.display.set_mode((WIDTH, HEIGHT)) # Size of the window
pygame.display.set_caption("Star Wars")  # title of the window

# loading images of Small ships
RED_SMALL_SPACESHIP = pygame.image.load(r"C:\Users\shubh\Downloads\assets\assets\pixel_ship_red_small.png")
BLUE_SMALL_SPACESHIP = pygame.image.load(r"C:\Users\shubh\Downloads\assets\assets\pixel_ship_blue_small.png")
GREEN_SMALL_SPACESHIP = pygame.image.load(r"C:\Users\shubh\Downloads\assets\assets\pixel_ship_green_small.png")

# loading images of Big ship
YELLOW_SPACESHIP = pygame.transform.scale(pygame.image.load(r"C:\Users\shubh\Downloads\assets\assets\pixel_ship_yellow.png"), (50,50))

# Lasers
RED_LASERS = pygame.image.load(r"C:\Users\shubh\Downloads\assets\assets\pixel_laser_red.png")
GREEN_LASERS = pygame.image.load(r"C:\Users\shubh\Downloads\assets\assets\pixel_laser_green.png")
BLUE_LASERS = pygame.image.load(r"C:\Users\shubh\Downloads\assets\assets\pixel_laser_blue.png")
YELLOW_LASERS = pygame.transform.scale(pygame.image.load(r"C:\Users\shubh\Downloads\assets\assets\pixel_laser_yellow.png"), (25,25))

# Background
BG = pygame.transform.scale(pygame.image.load(r"C:\Users\shubh\Downloads\assets\assets\background-black.png"),(WIDTH, HEIGHT))

# Class ship where you can store ship and use multiple times. It is a parent class and hence concept oif inheritance is used
class Ship:
    def __init__(self, x, y, health=100):
        self.x = x
        self.y = y
        self.health = health
        self.ship_img = None
        self.laser_img = None
        self.laser = []
        self.cool_down_counter = 0

    def draw(self, window):
        window.blit(self.ship_img, (self.x, self.y)) # draws a rectangle on background layer

    def get_width(self):
        return self.ship_img.get_width()

    def get_height(self):
        return self.ship_img.get_height()

class Player(Ship):
    def __init__(self,x, y, health=100):
        super().__init__(x, y, health)
        self.ship_img = YELLOW_SPACESHIP
        self.laser_img = YELLOW_LASERS
        self.mask = pygame.mask.from_surface(self.ship_img)
        self.max_health = health

class Enemy(Ship):
    COLOR_MAP = {
        "red" : (RED_SMALL_SPACESHIP, RED_LASERS),
        "green" : (GREEN_SMALL_SPACESHIP, GREEN_LASERS),
        "blue" : (BLUE_SMALL_SPACESHIP, BLUE_LASERS)
    }
    def __init__(self, x, y, color, health=100):
        super().__init__(x, y, health)
        self.ship_img, self.laser_img = self.COLOR_MAP[color]
        self.mask = pygame.mask.from_surface(self.ship_img)

    def move(self, vel):
        self.y += vel

def main():
    FPS = 60
    run = True
    lives = 5
    level = 1
    main_font = pygame.font.SysFont("agency fb", 25)
    lost_main_font = pygame.font.SysFont("Arial", 50)

    enemies = []
    wave_length = 5
    enemy_vel = 1

    player_vel = 5

    player = Player(250, 400) # Coordinates of a ship

    clock = pygame.time.Clock()

    lost = False
    lost_count = 0

    def redraw_window():
        WIN.blit(BG, (0,0))
        # draw text
        lives_label = main_font.render(f"Lives : {lives}",1, (255,255,255))
        level_label = main_font.render(f"Level : {level}", 1, (255, 255, 255))

        WIN.blit(lives_label, (10, 10))
        WIN.blit(level_label, (WIDTH - level_label.get_width() - 10, 10))

        for enemy in enemies:
            enemy.draw(WIN)

        player.draw(WIN)

        if lost:
            lost_label = lost_main_font.render("You Lost", 1, (255,255,255))
            WIN.blit(lost_label, (int(WIDTH/2) - int(lost_label.get_width()/2), 225))

        pygame.display.update()

    while run:
        clock.tick(FPS)
        redraw_window()

        if lives == 0 or player.health <= 0:
            lost = True
            lost_count += 1

        if lost:
            if lost_count > FPS*3:
                run = False
            else:
                continue

        if len(enemies) == 0:
            level += 1
            wave_length +=5
            for i in range(wave_length):
                enemy = Enemy(random.randrange(50, WIDTH-100), random.randrange(-1500, -100), random.choice(["red", "blue", "green"]))
                enemies.append(enemy)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

        keys = pygame.key.get_pressed()
        if keys[pygame.K_a] and player.x - player_vel > 0: # LEFT
            player.x -= player_vel
        if keys[pygame.K_d] and player.x + player_vel + player.get_width() < WIDTH: # RIGHT
            player.x += player_vel
        if keys[pygame.K_w] and player.y - player_vel > 0: # UP and inside the window
            player.y -= player_vel
        if keys[pygame.K_s] and player.y + player_vel + player.get_height() < HEIGHT: # DOWN and inside the window
            player.y += player_vel

        for enemy in enemies[:]:
            enemy.move(enemy_vel)
            if enemy.y + enemy.get_height() > HEIGHT:
                lives -= 1
                enemies.remove(enemy)



main()
